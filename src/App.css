
#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}

/* Custom radio styles */
.radio-card {
  @apply relative rounded-lg border border-gray-200 p-4 transition-all cursor-pointer;
}

.radio-card:hover {
  @apply border-gray-300;
}

.radio-card[data-state="checked"] {
  @apply border-purple-500 ring-1 ring-purple-500;
}

.radio-card-selected {
  @apply bg-purple-50;
}

/* Make labels and text near radio buttons show pointer cursor */
.radio-group-item-label,
label:has(+ input[type="radio"]),
label:has(input[type="radio"]),
*:has(> input[type="radio"]) {
  cursor: pointer;
}

/* Ensure the pointer hand cursor appears on all radio-related elements */
.radio-card,
.radio-card *,
input[type="radio"],
label[for]:has(+ input[type="radio"]),
[role="radiogroup"] label,
[role="radio"],
[role="radio"] + *,
input[type="checkbox"],
label[for]:has(+ input[type="checkbox"]) {
  cursor: pointer !important;
}

/* Custom animation for radio selection */
.radio-animate {
  transition: all 0.2s ease-in-out;
}

.radio-animate:active {
  transform: scale(0.95);
}

